mosip.event.hubURL=http://localhost:9191/websub
mosip.partner.id=792112
mosip.event.topic=${mosip.partner.id}/CREDENTIAL_ISSUED
mosip.event.secret=test
server.port=8099
csrf.disabled=true
//JSONObject event for birth
{
"birthID": "<idprovidedbyopencrvs>",
"date" : "<date of birth>"
"name": {"name of the child"},
"gender": "<gender>",
"guardian": "vid/rid/uin",
"guardianName": {"name of the guardian"},
"phoneNumber": "phone number",
"email": "email id",
"address": {"address"}
}

//JSONObject for birthresponse
{
"birthID": "<idprovidedbyopencrvs>",
"token": "<token>"
}

//JSONObject for death
{
"token": "token",
"deathID": "<idprovidedbyopencrvs>",
"date" : "<date>"
}

//JSONObject for namechange
{
"token": "token",
"nameChangeID": "<idprovidedbyopencrvs>",
"date": "<effective name change date",
"formerName": {//name before change},
"newName": {"new changed name"}
}


# add

mosip.registration.processor.database.hostname=dev.mosip.net

# Database Port
mosip.registration.processor.database.port=30090

registration.processor.zone=mz

#-----------Health checker--------------
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=info,health,refresh

#------packet-bio-dedupe-service--------
#Maximum abis records to be fetched at a time
registration.processor.abis.maxResults=30
#Dummy Tag for face in cbeff file
registration.processor.abis.targetFPIR=30

# ---------DB connection---------------
#Driver name
javax.persistence.jdbc.driver=org.postgresql.Driver

# Database connection URL
javax.persistence.jdbc.url=jdbc:postgresql://${mosip.registration.processor.database.hostname}:${mosip.registration.processor.database.port}/mosip_regprc?currentSchema=regprc

javax.persistence.jdbc.user=regprcuser
# TODO: user cipher below
javax.persistence.jdbc.password=mosip123

#Hibernate properties
hibernate.hbm2ddl.auto=none
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.jdbc.lob.non_contextual_creation=true
hibernate.show_sql=false

#-----packet-manager----------
registration.processor.LANDING_ZONE = /mnt/regproc/landing

#Location to store the file which is consumed from the print and postal queue
registration.processor.PRINT_POSTAL_SERVICE=/home/ftp1/PRINIT_POSTAL_SERVICE

#-----packet-utility----------
# The known packet sources. Should be set as all fieldCategory present in idschema
# (NOTE : if fieldCategory is set as pvt then the source should be id)
registration.processor.sourcepackets=id,evidence,optional
# The mandatory default source packet.(In default configuration this is thd id packet)
packet.default.source=id
# the default schema field cagegory (ex - private)
schema.default.fieldCategory=pvt,none
# The IDSchemaVersion used to create packets in reg-proc
IDSchema.Version=0.1

#---------registration-processor-camel-bridge------------

#Url to cluster manager to enable this stage for joining the cluster in secure zone
cluster.manager.file.name=hazelcast_mz.xml

#workel pool size to process multiple requests parallely 
worker.pool.size=10

#Route files corresponding to the secure flow
camel.secure.active.flows.file.names=registration-processor-camel-routes-new-mz.xml,registration-processor-camel-routes-update-mz.xml,registration-processor-camel-routes-activate-mz.xml,registration-processor-camel-routes-res-update-mz.xml,registration-processor-camel-routes-deactivate-mz.xml,registration-processor-camel-routes-lost-mz.xml,registration-processor-camel-routes-res-reprint-mz.xml

#-------------TOKEN GENERATION----------------
#Token generation request id
token.request.id=io.mosip.registration.processor
#Token generation app id
token.request.appid=regproc
#Token generation username
token.request.username=registrationprocessor
#Token generation password
token.request.password=abc123
#Token generation version
token.request.version=1.0
#Token generation Client Id
token.request.clientId=mosip-regproc-client
#Token generation secret key
token.request.secretKey=abc123
#Token generation issuer url
token.request.issuerUrl=http://keycloak/auth/realms/mosip

#--------Registration processor rest client API's--------------


#Audit Service
AUDIT=https://dev.mosip.net/v1/auditmanager/audits
mosip.kernel.pdf_owner_password=123456
#Auth Service
authmanager.base.url=https://dev.mosip.net
PASSWORDBASEDTOKENAPI=${authmanager.base.url}/v1/authmanager/authenticate/useridPwd
KEYBASEDTOKENAPI=${authmanager.base.url}/v1/authmanager/authenticate/clientidsecretkey
TOKENVALIDATE=${authmanager.base.url}/v1/authmanager/authorize/admin/validateToken
GETRIDFROMUSERID=${authmanager.base.url}/v1/authmanager/rid
INTERNALAUTH=http://ida-internal-service/idauthentication/v1/internal/auth

#Master Data Services
MASTER=https://dev.mosip.net/v1/masterdata
MACHINEHISTORY=${MASTER}/machineshistories
CENTERHISTORY=${MASTER}/registrationcentershistory
CENTERUSERMACHINEHISTORY=${MASTER}/getregistrationmachineusermappinghistory
REVERSEDATASYNC=http://prereg-datasync-service/preregistration/v1/sync/consumedPreRegIds
CENTERDETAILS=${MASTER}/registrationcenters
MACHINEDETAILS=${MASTER}/machines
DEVICESHISTORIES=${MASTER}/deviceshistories
REGISTRATIONCENTERDEVICEHISTORY=${MASTER}/registrationcenterdevicehistory
REGISTRATIONCENTERTIMESTAMP=${MASTER}/registrationcenters/validate
GENDER=${MASTER}/gendertypes/validate
REGION=${MASTER}/locations/validate
CITY=${MASTER}/locations/validate
POSTALCODE=${MASTER}/locations/validate
PROVINCE=${MASTER}/locations/validate
USERDETAILS=${MASTER}/users
TEMPLATES=${MASTER}/templates
DEVICEVALIDATEHISTORY=${MASTER}/deviceprovidermanagement/validate
#To get the idschema from masterdata db
IDSCHEMA=${MASTER}/idschema/latest

#ID Repository Services
IDREPOSITORY=http://idrepo-identity-service/idrepository/v1/identity/
IDREPOGETIDBYUIN=http://idrepo-identity-service/idrepository/v1/identity/idvid
UINGENERATOR=http://kernel-idgenerator-service/v1/idgenerator/uin
RETRIEVEIDENTITYFROMRID=http://idrepo-identity-service/idrepository/v1/identity/idvid
RETRIEVEIDENTITY=http://idrepo-identity-service/idrepository/v1/identity/idvid
CREATEVID=http://idrepo-vid-service/idrepository/v1/vid
GETUINBYVID=http://idrepo-vid-service/idrepository/v1/idvid

#Encrypt Services
ENCRYPTURL=https://dev.mosip.net/v1/keymanager/encrypt
ENCRYPTIONSERVICE=https://dev.mosip.net/v1/keymanager/publickey
PDFSIGN=https://dev.mosip.net/v1/keymanager/pdf/sign

#Digital Signature Service
DIGITALSIGNATURE=https://dev.mosip.net/v1/keymanager/sign

#Digital Signature Id
mosip.registration.processor.digital.signature.id=io.mosip.registration.processor

# Url from where packets need to be picked up DMZ (landing zone)
NGINXDMZURL=${dmz.ingress.base.url}/registrationprocessor/v1/dmzpacketserver

#--------Registration Processor Rest Client API's-----------
CRYPTOMANAGERDECRYPT=http://kernel-keymanager-service/v1/keymanager/decrypt

#External Service
EISERVICE=http://regproc-external-integration-service/registrationprocessor/v1/eis/registration-processor/external-integration-service/v1.0

#RID Generation Service
RIDGENERATION=http://kernel-ridgenerator-service/v1/ridgenerator/generate/rid

#Registration Processor Status Services
# We specify Ingress location for dmz which is any worker node and a ingress port
SYNCSERVICE=${dmz.ingress.base.url}/registrationprocessor/v1/registrationstatus/sync
PACKETRECEIVER=${dmz.ingress.base.url}/registrationprocessor/v1/packetreceiver/registrationpackets

#SMS and EMAIL notification services
SMSNOTIFIER=http://kernel-notification-service/v1/notifier/sms/send
EMAILNOTIFIER=http://kernel-notification-service/v1/notifier/email/send



#---------Registration Status---------

#Maximum retry count for packet
registration.processor.max.retry=10
#Registration Status Id
mosip.registration.processor.registration.status.id=mosip.registration.status
#Registration Sync Id
mosip.registration.processor.registration.sync.id=mosip.registration.sync
#Registration Transaction Id
mosip.registration.processor.registration.transaction.id=mosip.registration.transaction
#Registration Sync Version
mosip.registration.processor.sync.version=1.0
#Registration Status Version
mosip.registration.processor.registration.status.version=1.0
#Registration Transaction Version
mosip.registration.processor.transaction.version=1.0

#--------Demo Dedupe Stage---------
application.id=REGISTRATION
#Status for matched records in demo dedupe stage
registration.processor.demodedupe.manualverification.status=REJECTED
#configuration parameter to disable or enable Demographic Deduplication 
mosip.registration.processor.demographic.deduplication.enable=true

#-----------Manual Verification Stage------------
#Manual verification assignment request Id
mosip.registration.processor.manual.verification.assignment.id=mosip.manual.verification.assignment
#Manual verification decision request Id
mosip.registration.processor.manual.verification.decision.id=mosip.manual.verification.decision
#Manual verification biometric request Id
mosip.registration.processor.manual.verification.biometric.id=mosip.manual.verification.biometric
#Manual verification demographic request Id
mosip.registration.processor.manual.verification.demographic.id=mosip.manual.verification.demographic
#Manual verification packetinfo request Id
mosip.registration.processor.manual.verification.packetinfo.id=mosip.manual.verification.packetinfo

#--------OSI Validation Stage----------
#To enable or disable the Center working hour validation
mosip.workinghour.validation.required=true
#Applicant date of birth format
registration.processor.applicant.dob.format=yyyy/MM/dd
#Internal Auth request id
mosip.identity.auth.internal.requestid=mosip.identity.auth.internal
registration.processor.validate.introducer=true
mosip.kernel.device.validate.history.id=""
#UMC configuarble
mosip.registartion.processor.validateUMC=false

#---------Packet Receiver Stage------------
#Maximum file size to be upload from packet receiver
registration.processor.max.file.size=5
#Packet receiver application version
mosip.print.application.version=1.0
#Request Date Time format
mosip.print.datetime.pattern=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
#Request Date Timezone
mosip.registration.processor.timezone=GMT
#Packet Receiver request Id
mosip.registration.processor.packet.id=mosip.registration.packet
#Request time grace period
mosip.registration.processor.grace.period=10800

#-----------Retry Stage-----------
registration.processor.wait.period=1

#----------Uin Generator Stage------------
#Idrepo create request Id
registration.processor.id.repo.create=mosip.id.create
#Idrepo read request Id
registration.processor.id.repo.read=mosip.id.read
#Idrepo update request Id
registration.processor.id.repo.update=mosip.id.update
#Idrepo vidType request Id
registration.processor.id.repo.vidType=Perpetual
#Idrepo generate request Id
registration.processor.id.repo.generate=mosip.vid.create
#Idrepo vid version
registration.processor.id.repo.vidVersion=v1

#---------Virus Scanner Stage---------
#Virus scanner packet extension
registration.processor.packet.ext=.zip
#Virus scanner server host
mosip.kernel.virus-scanner.host=clamav
#Virus scanner port
mosip.kernel.virus-scanner.port=80
#Virus scanner application request id
registration.processor.application.id=REGISTRATION
registration.processor.rid.machineidsubstring=10

#---------Message Sender Stage----------------------
#Mapping Identity json to map with the applicant id json
registration.processor.identityjson=registration-processor-identity.json
#create text print text file
registration.processor.print.textfile=registration-processor-print-text-file.json
#Abis queue configuration json
registration.processor.abis.json=registration-processor-abis.json
#Demographic identity label
registration.processor.demographic.identity=identity
registration.processor.notification.emails=

#Email subjects for success & failure scenario
#Uin generated subject
registration.processor.uin.generated.subject=UIN Generated
#Duplicate Uin subject
registration.processor.duplicate.uin.subject=Registration Failed because you have already Registered
#Applicant re-register subject
registration.processor.reregister.subject=Re-Register because there was a Technical Issue
#Uin activated subject
registration.processor.uin.activated.subject=Uin is activated successfully
#Uin deactivated subject
registration.processor.uin.deactivated.subject=Uin is deactivated
#Uin details updated subject
registration.processor.updated.subject=UIN Details Updated

#------------Queue-----------------------
#Queue username
registration.processor.queue.username=admin
#Queue Password
registration.processor.queue.password=mcq
#Queue Url
registration.processor.queue.url=tcp://activemq:80  
#Type of the Queue
registration.processor.queue.typeOfQueue=ACTIVEMQ
#Print Service address
registration.processor.queue.address = print-service
#Post Service address
registration.processor.queue.printpostaladdress = postal-service

# Enable proxy postal service response for test environments where actual postal service wont be available
# IMPORTANT : This should always be set as false in actual production environment
registration.processor.enable.proxy.postalservice=true

#------------Packet Validator Stage-----------
#Attributes to be validated in master data validation
registration.processor.masterdata.validation.attributes = gender,region,province,city
registration.processor.validateSchema=true
registration.processor.validateFile=true
registration.processor.validateChecksum=true
registration.processor.validateApplicantDocument=true
registration.processor.validateMasterData=false
registration-processor.validatemandotary=true

registration.processor.document.category=idobject-document-category-mapping.json
registration.processor.applicant.type=applicanttype-document-mapping.json

#------------Packet Generator-----------------
#Audit request id for packet generator
registration.processor.audit.applicationId=PACGEN
#Audit request application name for packet generator
registration.processor.audit.applicationName=PACKET_GENERATOR
#Packet generator request id
mosip.registration.processor.registration.packetgenerator.id=mosip.registration.packetgenerator
#Uin Card RePrint request id
mosip.registration.processor.uincard.reprint.id = mosip.uincard.reprint
#Packet generator request version
mosip.registration.processor.packetgenerator.version=1.0
#resident update service id
mosip.registration.processor.resident.service.id=mosip.registration.update
#resident lost service id
mosip.registration.processor.lost.id=mosip.registration.lost


#-------------Printing Service--------------------
mosip.registration.processor.print.service.id=mosip.registration.print
#unmasked uin length
registration.processor.unMaskedUin.length=4
#UIN card password
mosip.registration.processor.print.service.uincard.password=postalCode|fullName
#header length to be removed from iso image to get actual image
mosip.print.uin.header.length=75
#Rectangle coordinates for pfd signataured data
mosip.registration.processor.print.service.uincard.lowerleftx=73
mosip.registration.processor.print.service.uincard.lowerlefty=100
mosip.registration.processor.print.service.uincard.upperrightx=300
mosip.registration.processor.print.service.uincard.upperrighty=300
mosip.registration.processor.print.service.uincard.signature.reason="signing"

#--------------Reprocessor stage----------------

#Number of the reprocess records to be fetched at a time
registration.processor.reprocess.fetchsize=100

# The reprocessor scheduler configurations
# The elapse time beyond which the rids will be considered for reprocessing
registration.processor.reprocess.elapse.time=300
# The maximum reprocess count. Beyond this the rid will not be considered for reprocessing.
registration.processor.reprocess.attempt.count=300
# Reprocess type
registration.processor.reprocess.type=cron
#schedular seconds configuration
registration.processor.reprocess.seconds=*
#schedular minutes configuration
registration.processor.reprocess.minutes=15
#schedular hours configuration
registration.processor.reprocess.hours=*
#schedular days configuration
registration.processor.reprocess.days_of_month=*
#schedular months configuration
registration.processor.reprocess.months=*
#schedular weeks configuration
registration.processor.reprocess.days_of_week=*


#Service Ids
#Audit request id
mosip.print.audit.id=mosip.applicanttype.getApplicantType
#Cryptomanager decrypt request id
mosip.registration.processor.crypto.decrypt.id=mosip.cryptomanager.decrypt
#SMS notification request id
mosip.registration.processor.sms.id=mosip.sms.send
#Email notification request id
mosip.registration.processor.email.id=mosip.email.send

#Kernel Crypto signature
registration.processor.signature.isEnabled=true

#BioDedupe stage
registration.processor.infant.dedupe=N

# ID Authentication 
IDAUTHENCRYPTION=http://ida-internal-service/idauthentication/v1/internal/encrypt
IDAUTHPUBLICKEY=http://ida-internal-service/idauthentication/v1/internal/publickey


registration.processor.objectstore.adapter.name=S3Adapter
packetmanager.base.url=http://packetmanager-service/commons
PACKETMANAGER_SEARCH_FIELD=${packetmanager.base.url}/v1/packetmanager/searchField
PACKETMANAGER_SEARCH_FIELDS=${packetmanager.base.url}/v1/packetmanager/searchFields
PACKETMANAGER_SEARCH_METAINFO=${packetmanager.base.url}/v1/packetmanager/metaInfo
PACKETMANAGER_VALIDATE=${packetmanager.base.url}/v1/packetmanager/validatePacket
PACKETMANAGER_SEARCH_DOCUMENT=${packetmanager.base.url}/v1/packetmanager/document
PACKETMANAGER_SEARCH_BIOMETRICS=${packetmanager.base.url}/v1/packetmanager/biometrics
PACKETMANAGER_SEARCH_AUDITS=${packetmanager.base.url}/v1/packetmanager/audits
DATASHARECREATEURL=http://datashare-service/v1/datashare/create
DATASHAREGETEURL=http://datashare-service/v1/datashare/get
registration.processor.policy.id=96025
registration.processor.subscriber.id=748757


#iam adapter
mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter


#application

mosip.kernel.idobjectvalidator.property-source=APPLICATION_CONTEXT
mosip.kernel.idobjectvalidator.schema-name=mosip-identity-json-schema.json
mosip.kernel.idobjectvalidator.file-storage-uri=dev.mosip.net/config/registration-processor/mz/1.1.2/
mosip.kernel.idobjectvalidator.masterdata.locations.locationNotAvailable=NA

mosip.masterdata.base.url = http://dev.mosip.net
mosip.kernel.idobjectvalidator.masterdata.languages.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/languages
mosip.kernel.idobjectvalidator.masterdata.gendertypes.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/gendertypes
mosip.kernel.idobjectvalidator.masterdata.documentcategories.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/documentcategories
mosip.kernel.idobjectvalidator.masterdata.documenttypes.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/documenttypes/{documentcategorycode}/{langcode}
mosip.kernel.idobjectvalidator.masterdata.locations.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/locations/{langcode}
mosip.kernel.idobjectvalidator.masterdata.locationhierarchy.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/locations/locationhierarchy/{hierarchyname}
mosip.kernel.idobjectvalidator.masterdata.individualtypes.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/individualtypes

mosip.kernel.idobjectvalidator.mandatory-attributes.id-repository.new-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone
mosip.kernel.idobjectvalidator.mandatory-attributes.id-repository.update-uin=IDSchemaVersion,UIN
mosip.kernel.idobjectvalidator.mandatory-attributes.pre-registration.new-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-client.new-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.new-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber
mosip.kernel.idobjectvalidator.mandatory-attributes.pre-registration.child-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-client.child-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber,parentOrGuardianName,parentOrGuardianRID|parentOrGuardianUIN,parentOrGuardianBiometrics
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.child-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber,parentOrGuardianName,parentOrGuardianRID|parentOrGuardianUIN,parentOrGuardianBiometrics

mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.other=IDSchemaVersion,UIN
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.lost=IDSchemaVersion

mosip.kernel.idobjectvalidator.mandatory-attributes.id-repository.update-uin=IDSchemaVersion,UIN

mosip.id.validation.identity.dateOfBirth=^(1869|18[7-9][0-9]|19\\d\\d|20\\d\\d)/([0][1-9]|1[0-2])/([0][1-9]|[1-2]\\d|3[01])$
mosip.id.validation.identity.phone=^([6-9]{1})([0-9]{9})$
mosip.id.validation.identity.email=^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-zA-Z]{2,})$
mosip.id.validation.identity.postalCode=^[(?i)A-Z0-9]{5}$|^NA$
mosip.id.validation.identity.age=^(150|1[0-4][0-9]|[1-9]?[0-9])$
mosip.id.validation.identity.fullName.[*].value=^(?=.{0,50}$).*
mosip.id.validation.identity.addressLine1.[*].value=^(?=.{0,50}$).*
mosip.id.validation.identity.addressLine2.[*].value=^(?=.{0,50}$).*
mosip.id.validation.identity.addressLine3.[*].value=^(?=.{0,50}$).*
mosip.id.validation.identity.region.[*].value=^(?=.{0,50}$).*
mosip.id.validation.identity.province.[*].value=^(?=.{0,50}$).*
mosip.id.validation.identity.city.[*].value=^(?=.{0,50}$).*
mosip.id.validation.identity.[*].[*].language=^[(?i)a-z]{3}$
mosip.id.validation.identity.referenceIdentityNumber=^([0-9]{10,30})$

mosip.country.code=MOR

# Language Supported By Platform - ISO 
mosip.supported-languages=eng,ara,fra

mosip.primary-language=eng
mosip.secondary-language=ara

# Application IDs
mosip.prereg.app-id=PRE_REGISTRATION
mosip.reg.app-id=REGISTRATION
mosip.regproc.app-id=REGISTRATION_PROCESSOR
mosip.ida.app-id=IDA
mosip.ida.ref-id=INTERNAL
mosip.idrepo.app-id=ID_REPO

# UTC ISO Date Time Pattern
mosip.utc-datetime-pattern=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
mosip.sign.header=response-signature
mosip.signed.response.header=response-signature

#----------------------- CBEFF Util--------------------------------------------------
# Cbeff URL where the files will be stored in git, change it accordingly in case of change of storage location.
mosip.kernel.xsdstorage-uri=https://dev.mosip.net/config/registration-processor/mz/1.1.2/
# Cbeff XSD file name in config server
mosip.kernel.xsdfile=mosip-cbeff.xsd

#----------------------------- Applicant Type --------------------------------------------------
mosip.kernel.applicant.type.age.limit = 5

#----------------------------- Static PIN --------------------------------------------------
mosip.kernel.pin.length=6

#-----------------------------TspId -----------------------------------------------
#length of the Tsp id
mosip.kernel.tspid.length=4

#-----------------------------partnerId -----------------------------------------------
#length of the partner id
mosip.kernel.partnerid.length=4

#-----------------------------TOKEN-ID Properties---------------------------------
#length of the token id
mosip.kernel.tokenid.length=36

#-----------------------------Registration Center Id -----------------------------------------------
#length of the registration center id
mosip.kernel.registrationcenterid.length=5

#-----------------------------Machine Id -----------------------------------------------
#length of the machine id
mosip.kernel.machineid.length=5

#-----------------------------RID Properties---------------------------------------
# length of the rid
mosip.kernel.rid.length=29
# length of the timestamp
mosip.kernel.rid.timestamp-length=14
# rid sequence max digits
mosip.kernel.rid.sequence-length=5

# Upper bound of number of digits in sequence allowed in id. For example if
# limit is 3, then 12 is allowed but 123 is not allowed in id (in both
# ascending and descending order)
mosip.kernel.tokenid.sequence-limit=3

#-----------------------------PRID Properties------------------------------------
#prid-length
mosip.kernel.prid.length=14

# Upper bound of number of digits in sequence allowed in id. For example if
# limit is 3, then 12 is allowed but 123 is not allowed in id (in both
# ascending and descending order)
#to disable validation assign zero or negative value
mosip.kernel.prid.sequence-limit=3

# Number of digits in repeating block allowed in id. For example if limit is 2,
# then 4xxx4 is allowed but 48xxx48 is not allowed in id (x is any digit)
#to disable validation assign zero or negative value
mosip.kernel.prid.repeating-block-limit=3


# Lower bound of number of digits allowed in between two repeating digits in
# id. For example if limit is 2, then 11 and 1x1 is not allowed in id (x is any digit) to disable validation assign zero or negative value
mosip.kernel.prid.repeating-limit=2

# list of number that id should not be start with to disable null
mosip.kernel.prid.not-start-with=0,1

#restricted numbers for prid
mosip.kernel.prid.restricted-numbers=786,666


#-----------------------------VID Properties--------------------------------------
# length of the vid
mosip.kernel.vid.length=16

# Upper bound of number of digits in sequence allowed in id. For example if
# limit is 3, then 12 is allowed but 123 is not allowed in id (in both
# ascending and descending order)
# to disable sequence limit validation assign 0 or negative value
mosip.kernel.vid.length.sequence-limit=3

# Number of digits in repeating block allowed in id. For example if limit is 2,
# then 4xxx4 is allowed but 48xxx48 is not allowed in id (x is any digit)
# to disable repeating block validation assign 0 or negative value
mosip.kernel.vid.length.repeating-block-limit=2


# Lower bound of number of digits allowed in between two repeating digits in
# id. For example if limit is 2, then 11 and 1x1 is not allowed in id (x is any digit)
# to disable repeating limit validation, assign 0  or negative value
mosip.kernel.vid.length.repeating-limit=2

# list of number that id should not be start with
# to disable null
mosip.kernel.vid.not-start-with=0,1

#restricted numbers for vid
mosip.kernel.vid.restricted-numbers=786,666

#-----------------------------UIN Properties--------------------------------------
#length of the uin
mosip.kernel.uin.length=10
#minimum threshold of unused uin
mosip.kernel.uin.min-unused-threshold=200000
#number of uins to generate
mosip.kernel.uin.uins-to-generate=500000
#restricted numbers for uin
mosip.kernel.uin.restricted-numbers=786,666

# Upper bound of number of digits in sequence allowed in id. For example if
# limit is 3, then 12 is allowed but 123 is not allowed in id (in both
# ascending and descending order)
# to disable sequence limit validation assign 0 or negative value
mosip.kernel.uin.length.sequence-limit=3

# Number of digits in repeating block allowed in id. For example if limit is 2,
# then 4xxx4 is allowed but 48xxx48 is not allowed in id (x is any digit)
#to disable validation assign zero or negative value
mosip.kernel.uin.length.repeating-block-limit=2

# Lower bound of number of digits allowed in between two repeating digits in
# id. For example if limit is 2, then 11 and 1x1 is not allowed in id (x is any digit)
# to disable repeating limit validation, assign 0  or negative value
mosip.kernel.uin.length.repeating-limit=2

#reverse group digit limit for uin filter
mosip.kernel.uin.length.reverse-digits-limit=5

#group digit limit for uin filter
mosip.kernel.uin.length.digits-limit=5

#should not start with
mosip.kernel.uin.not-start-with=0,1

#adjacent even digit limit for uin filter
mosip.kernel.uin.length.conjugative-even-digits-limit=3



#------------------------Auth-Adapter-----------------------------------------------
auth.server.validate.url=http://dev.mosip.net/v1/authmanager/authorize/admin/validateToken
mosip.keycloak.base-url=http://keycloak
mosip.keycloak.issuerUrl=${mosip.keycloak.base-url}/auth/realms/mosip
auth-token-generator.rest.issuerUrl=${mosip.keycloak.issuerUrl}

#----------------------- Crypto --------------------------------------------------
#Crypto asymmetric algorithm name
mosip.kernel.crypto.asymmetric-algorithm-name=RSA/ECB/OAEPWITHSHA-256ANDMGF1PADDING
#Crypto symmetric algorithm name
mosip.kernel.crypto.symmetric-algorithm-name=AES/GCM/PKCS5Padding
#Keygenerator asymmetric algorithm name
mosip.kernel.keygenerator.asymmetric-algorithm-name=RSA
#Keygenerator symmetric algorithm name
mosip.kernel.keygenerator.symmetric-algorithm-name=AES
#Asymmetric algorithm key length
mosip.kernel.keygenerator.asymmetric-key-length=2048
#Symmetric algorithm key length
mosip.kernel.keygenerator.symmetric-key-length=256
#Keygenerator symmetric algorithm name
mosip.kernel.keygenerator.symmetric-algorithm-name=AES
# keygenerator asymmetric algorithm name
mosip.kernel.keygenerator.asymmetric-algorithm-name=RSA
#Encrypted data and encrypted symmetric key separator
mosip.kernel.data-key-splitter=#KEY_SPLITTER#
#GCM tag length
mosip.kernel.crypto.gcm-tag-length=128
#Hash algo name
mosip.kernel.crypto.hash-algorithm-name=PBKDF2WithHmacSHA512
#Symmtric key length used in hash
mosip.kernel.crypto.hash-symmetric-key-length=256
#No of iterations in hash
mosip.kernel.crypto.hash-iteration=100000
#Sign algo name
mosip.kernel.crypto.sign-algorithm-name=RS256

mosip.keymanager.base.url=http://dev.mosip.net
mosip.kernel.keymanager-service-publickey-url=${mosip.keymanager.base.url}/v1/keymanager/publickey/{applicationId}
mosip.kernel.keymanager-service-decrypt-url=${mosip.keymanager.base.url}/v1/keymanager/decrypt
mosip.kernel.keymanager-service-auth-decrypt-url=${mosip.keymanager.base.url}/v1/keymanager/auth/decrypt
mosip.kernel.keymanager-service-sign-url=${mosip.keymanager.base.url}/v1/keymanager/sign
mosip.sign.applicationid=KERNEL
mosip.sign.refid=SIGN
mosip.kernel.cryptomanager.request_id=CRYPTOMANAGER.REQUEST
mosip.kernel.cryptomanager.request_version=v1.0
mosip.kernel.signature.signature-request-id=SIGNATURE.REQUEST
mosip.kernel.signature.signature-version-id=v1.0



#----------------------------------ID Repo------------------------------------------
mosip.idrepo.identity.uin-status.registered=ACTIVATED
mosip.idrepo.identity.uin-status=ACTIVATED,BLOCKED,DEACTIVATED

#---------------------------------------otp manager service-------------------------------
#the default length for otp(in number)
mosip.kernel.otp.default-length=6
#the default crypto function
#It can be: HmacSHA512, HmacSHA256, HmacSHA1.
mosip.kernel.otp.mac-algorithm=HmacSHA512
#the OTP expires after the given time(in seconds).
mosip.kernel.otp.expiry-time=180
#the key is freezed for the given time(in seconds).
mosip.kernel.otp.key-freeze-time=1800
#the number of validation attempts allowed(in number).
#mosip.kernel.otp.validation-attempt-threshold =3 means , the validation and generation will be blocked from 4th time.
mosip.kernel.otp.validation-attempt-threshold=10
#minimum length of key(in number).
mosip.kernel.otp.min-key-length=3
#maximum length of key(in number).
mosip.kernel.otp.max-key-length=64


#--------------------------------------Licensekeymanager  Service--------------------------------------
#the license key length.
mosip.kernel.licensekey.length=16
#List of permissions
# NOTE: ',' in the below list is used as splitter in the implementation. 
# Use of ',' in the values for below key should be avoided.
# Use of spaces before and after ',' also should be avoided.
mosip.kernel.licensekey.permissions=OTP Trigger,OTP Authentication,Demo Authentication - Identity Data Match,Demo Authentication - Address Data Match,Demo Authentication - Full Address Data Match,Demo Authentication - Secondary Language Match,Biometric Authentication - FMR Data Match,Biometric Authentication - IIR Data Match,Biometric Authentication - FID Data Match,Static Pin Authentication,eKYC - limited,eKYC - Full,eKYC - No



#-----------------------------Virus Scanner--------------------------------------
# Here we specify the Kubernetes service name, as clamav runs in the same cluster
mosip.kernel.virus-scanner.host=clamav 
mosip.kernel.virus-scanner.port=80

#-------------------------------FS Adapter- HDFS -------------------------------
mosip.kernel.fsadapter.hdfs.name-node-url=hdfs://hadoop-hdfs-nn:9000
mosip.kernel.fsadapter.hdfs.authentication-enabled=false
# If HDFS is security is configured with Kerberos, Key Distribution Center domain
mosip.kernel.fsadapter.hdfs.kdc-domain=HDFSKERBEROS1.SOUTHINDIA.CLOUDAPP.AZURE.COM
# HDFS log level. Change this to debug to see hdfs logs
logging.level.org.apache.hadoop=warn
mosip.kernel.fsadapter.hdfs.keytab-file=classpath:mosip.keytab



#------------------------Transliteration-----------------------------------------------
mosip.kernel.transliteration.arabic-language-code=ara
mosip.kernel.transliteration.franch-language-code=fra



#-------Registration processor Notification types------------
mosip.registration.processor.notification.types=EMAIL


mosip.default.dob.month=01
mosip.default.dob.day=01
mosip.login.mode= email,mobile


#---Language orientation-----
mosip.right_to_left_orientation=ara
mosip.left_to_right_orientation=eng,fra


#**************** Notification Type *************
mosip.notificationtype=SMS|EMAIL
mosip.kernel.sms.proxy-sms=true
mosip.kernel.auth.proxy-otp=true
mosip.kernel.auth.proxy-email=true
#******** Notification lanugage types - either PRIMARY or BOTH ********
mosip.notification.language-type=BOTH


#-------------------System---------------
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=INFO

#-------------------Admin---------------
mosip.min-digit-longitude-latitude=4
mosip.kernel.filtervalue.max_columns=20

auth.server.admin.validate.url=http://dev.mosip.net/v1/authmanager/authorize/admin/validateToken

#------------------PDF Genration-----------------------------------------
#mosip.kernel.pdf_owner_password={cipher}6cbd7358f7a821132862475c16cf48e575c8e2c5f994fa7140ee08f364015b24
#------------------Quality Check-----------------------------------------
#Quality threshold for applicant iris
mosip.iris_threshold=0
#Quality threshold for applicant leftslap fingerprint
mosip.leftslap_fingerprint_threshold=0
#Quality threshold for applicant rightslap fingerprint
mosip.rightslap_fingerprint_threshold=0
#Quality threshold for applicant thumbs fingerprint
mosip.thumbs_fingerprint_threshold=0
#Quality threshold for applicant face
mosip.facequalitythreshold=0
#Bio SDK Integration
mosip.fingerprint.provider=io.mosip.kernel.bioapi.impl.BioApiImpl
mosip.face.provider=io.mosip.kernel.bioapi.impl.BioApiImpl
mosip.iris.provider=io.mosip.kernel.bioapi.impl.BioApiImpl

#-------UIN Alias-------------------
mosip.uin.alias=

#---------------------------------kernel Salt Generator---------------------------------------------------#
mosip.kernel.salt-generator.chunk-size=10
mosip.kernel.salt-generator.start-sequence=0
mosip.kernel.salt-generator.end-sequence=999
#----------------------------------------------------------------------------------------------------------#
server.max-http-header-size=10000000

mosip.kernel.auth.adapter.ssl-bypass=true
mosip.kernel.auth.appid-realm-map={prereg:'preregistration',ida:'mosip',registrationclient:'mosip',regproc:'mosip',partner:'mosip',resident:'mosip',admin:'mosip',crereq:'mosip',creser:'mosip',datsha:'mosip'}

#---------------------------------prometheus : Metrics related configurations---------------------------------------------------#
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

mosip.kernel.syncdata-service-idschema-url=${mosip.masterdata.base.url}/v1/masterdata/idschema/latest
mosip.kernel.syncdata-service-dynamicfield-url=${mosip.masterdata.base.url}/v1/masterdata/dynamicfields
mosip.kernel.keymanager-service-validate-url=${mosip.keymanager.base.url}/v1/keymanager/validate

# ------------ GPS settings ---------

mosip.registration.gps_device_enable_flag=n


# ------------- Packet manager ----------------------
mosip.commons.packetnames=id,evidence,optional
# reader
provider.packetreader.mosip=source:REGISTRATION_CLIENT,process:NEW|UPDATE|LOST|CORRECTION|ACTIVATED|DEACTIVATED|RES_UPDATE|LOST|RES_REPRINT,classname:io.mosip.commons.packet.impl.PacketReaderImpl
# writer
provider.packetwriter.mosip=source:REGISTRATION_CLIENT,process:NEW|UPDATE|LOST|CORRECTION|ACTIVATED|DEACTIVATED|RES_UPDATE|LOST|RES_REPRINT,classname:io.mosip.commons.packet.impl.PacketWriterImpl
objectstore.adapter.name=S3Adapter
# can be OnlinePacketCryptoServiceImpl OR OfflinePacketCryptoServiceImpl
objectstore.crypto.name=OfflinePacketCryptoServiceImpl
default.provider.version=v1.0
# posix adapter config
object.store.base.location=/home
#-------------S3adapter-------------------
# s3 adapter config
object.store.s3.accesskey=admin
#object.store.s3.secretkey={cipher}e419b23e688cc23991001afddbda206d42f7df5090c65f3566be7651c90128c1
object.store.s3.url=http://minio:9000
object.store.s3.region=
object.store.s3.readlimit=10000000

# swift adapter config
object.store.swift.username=test
object.store.swift.password=test
object.store.swift.url=http://localhost:8080

packet.manager.account.name=PACKET_MANAGER_ACCOUNT
CRYPTOMANAGER_DECRYPT=${mosip.keymanager.base.url}/v1/keymanager/decrypt
CRYPTOMANAGER_ENCRYPT=${mosip.keymanager.base.url}/v1/keymanager/encrypt
IDSCHEMAURL=${mosip.masterdata.base.url}/v1/masterdata/idschema/latest
KEYMANAGER_SIGN=${mosip.keymanager.base.url}/v1/keymanager/sign
AUDIT_URL=https://dev.mosip.net/v1/auditmanager/audits
packet.default.source=id
schema.default.fieldCategory=pvt,none

# device registration/deregistration config
mosip.stage.environment=Developer

# log level
logging.level.root=WARN
logging.level.io.mosip=INFO
logging.level.io.mosip.kernel.auth.defaultadapter.filter=INFO

#iam adapter
mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter

# tomcat access logs
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=/dev
server.tomcat.accesslog.prefix=stdout
server.tomcat.accesslog.buffered=false
server.tomcat.accesslog.suffix=
server.tomcat.accesslog.file-date-format=
server.tomcat.accesslog.pattern={"@timestamp":"%{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}t","level":"ACCESS","level_value":70000,"traceId":"%{X-B3-TraceId}i","statusCode":%s,"req.requestURI":"%U","bytesSent":%b,"timeTaken":%T,"appName":"${spring.application.name}"}
server.tomcat.accesslog.className=io.mosip.kernel.core.logger.config.SleuthValve

registration.processor.unMaskedUin.length=5
#mosip.print.uin.header.length=10
config.server.file.storage.uri=https://dev.mosip.net/config/registration-processor/mz/1.1.2/
IDSchema.Version=1.0
registration.processor.identityjson=registration-processor-identity.json
registration.processor.demographic.identity=identity
